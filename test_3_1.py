"""
Задание 1.

Реализовать структуру «Рейтинг», представляющую собой не
возрастающий набор натуральных чисел (каждый элемент рядя меньше или больше предыдущего).

У пользователя необходимо запрашивать новый элемент рейтинга.
Если в рейтинге существуют элементы с одинаковыми значениями,
то новый элемент с тем же значением должен разместиться после них.

Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.

Набор натуральных чисел можно задать непосредственно в коде,
например, my_list = [7, 5, 3, 3, 2].
"""

def insert_rating(rating, new_score):
    """
    Вставляет новое значение new_score в рейтинг (список rating),
    упорядоченный по невозрастанию.
    Если в списке уже есть элементы, равные new_score,
    новый элемент помещается после них.
    :param rating: list[int] -- исходный рейтинг
    :param new_score: int -- новое значение для вставки
    :return: list[int] -- обновленный рейтинг
    """
    result = rating.copy()
    position = len(result)
    for idx, val in enumerate(result):
        if new_score > val:
            # Вставляем перед первым меньшим элементом
            position = idx
            break
        elif new_score == val:
            # Сдвигаемся после всех равных элементов
            last_eq = idx
            while last_eq + 1 < len(result) and result[last_eq + 1] == val:
                last_eq += 1
            position = last_eq + 1
            break
    result.insert(position, new_score)
    return result


def main():
    # Начальный рейтинг
    rating = [7, 5, 3, 3, 2]
    print("Текущий рейтинг:", rating)
    try:
        while True:
            new = int(input("Введите новый элемент рейтинга (натуральное число): "))
            if new <= 0:
                print("Пожалуйста, введите натуральное число (>0).")
                continue
            rating = insert_rating(rating, new)
            print("Обновленный рейтинг:", rating)
    except KeyboardInterrupt:
        print("\nВыход из программы.")

if __name__ == "__main__":
    main()